// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: tours/tours-service.proto

package tours

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transport int32

const (
	Transport_Walk    Transport = 0
	Transport_Drive   Transport = 1
	Transport_Bicycle Transport = 2
)

// Enum value maps for Transport.
var (
	Transport_name = map[int32]string{
		0: "Walk",
		1: "Drive",
		2: "Bicycle",
	}
	Transport_value = map[string]int32{
		"Walk":    0,
		"Drive":   1,
		"Bicycle": 2,
	}
)

func (x Transport) Enum() *Transport {
	p := new(Transport)
	*p = x
	return p
}

func (x Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_tours_tours_service_proto_enumTypes[0].Descriptor()
}

func (Transport) Type() protoreflect.EnumType {
	return &file_tours_tours_service_proto_enumTypes[0]
}

func (x Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transport.Descriptor instead.
func (Transport) EnumDescriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{0}
}

type TourStatus int32

const (
	TourStatus_Draft     TourStatus = 0
	TourStatus_Published TourStatus = 1
	TourStatus_Archived  TourStatus = 2
)

// Enum value maps for TourStatus.
var (
	TourStatus_name = map[int32]string{
		0: "Draft",
		1: "Published",
		2: "Archived",
	}
	TourStatus_value = map[string]int32{
		"Draft":     0,
		"Published": 1,
		"Archived":  2,
	}
)

func (x TourStatus) Enum() *TourStatus {
	p := new(TourStatus)
	*p = x
	return p
}

func (x TourStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TourStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tours_tours_service_proto_enumTypes[1].Descriptor()
}

func (TourStatus) Type() protoreflect.EnumType {
	return &file_tours_tours_service_proto_enumTypes[1]
}

func (x TourStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TourStatus.Descriptor instead.
func (TourStatus) EnumDescriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{1}
}

type ToursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*TourResponse `protobuf:"bytes,1,rep,name=Tours,proto3" json:"Tours,omitempty"`
}

func (x *ToursResponse) Reset() {
	*x = ToursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToursResponse) ProtoMessage() {}

func (x *ToursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToursResponse.ProtoReflect.Descriptor instead.
func (*ToursResponse) Descriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{0}
}

func (x *ToursResponse) GetTours() []*TourResponse {
	if x != nil {
		return x.Tours
	}
	return nil
}

type TourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Difficult     int64                  `protobuf:"varint,4,opt,name=Difficult,proto3" json:"Difficult,omitempty"`
	Price         float32                `protobuf:"fixed32,5,opt,name=Price,proto3" json:"Price,omitempty"`
	Status        TourStatus             `protobuf:"varint,6,opt,name=Status,proto3,enum=tours.TourStatus" json:"Status,omitempty"`
	AuthorId      int64                  `protobuf:"varint,7,opt,name=AuthorId,proto3" json:"AuthorId,omitempty"`
	Length        float32                `protobuf:"fixed32,8,opt,name=Length,proto3" json:"Length,omitempty"`
	PublishTime   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=PublishTime,proto3" json:"PublishTime,omitempty"`
	ArchiveTime   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=ArchiveTime,proto3" json:"ArchiveTime,omitempty"`
	MyOwn         bool                   `protobuf:"varint,11,opt,name=MyOwn,proto3" json:"MyOwn,omitempty"`
	KeyPoints     []*KeyPoint            `protobuf:"bytes,12,rep,name=KeyPoints,proto3" json:"KeyPoints,omitempty"`
	RequiredTimes []*RequiredTime        `protobuf:"bytes,13,rep,name=RequiredTimes,proto3" json:"RequiredTimes,omitempty"`
	Tags          []string               `protobuf:"bytes,14,rep,name=Tags,proto3" json:"Tags,omitempty"`
}

func (x *TourResponse) Reset() {
	*x = TourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponse) ProtoMessage() {}

func (x *TourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponse.ProtoReflect.Descriptor instead.
func (*TourResponse) Descriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{1}
}

func (x *TourResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourResponse) GetDifficult() int64 {
	if x != nil {
		return x.Difficult
	}
	return 0
}

func (x *TourResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourResponse) GetStatus() TourStatus {
	if x != nil {
		return x.Status
	}
	return TourStatus_Draft
}

func (x *TourResponse) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourResponse) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *TourResponse) GetPublishTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishTime
	}
	return nil
}

func (x *TourResponse) GetArchiveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchiveTime
	}
	return nil
}

func (x *TourResponse) GetMyOwn() bool {
	if x != nil {
		return x.MyOwn
	}
	return false
}

func (x *TourResponse) GetKeyPoints() []*KeyPoint {
	if x != nil {
		return x.KeyPoints
	}
	return nil
}

func (x *TourResponse) GetRequiredTimes() []*RequiredTime {
	if x != nil {
		return x.RequiredTimes
	}
	return nil
}

func (x *TourResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type KeyPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TourId      int64   `protobuf:"varint,2,opt,name=TourId,proto3" json:"TourId,omitempty"`
	Latitude    float32 `protobuf:"fixed32,3,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,4,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Name        string  `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Picture     string  `protobuf:"bytes,7,opt,name=Picture,proto3" json:"Picture,omitempty"`
	Public      bool    `protobuf:"varint,8,opt,name=Public,proto3" json:"Public,omitempty"`
}

func (x *KeyPoint) Reset() {
	*x = KeyPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPoint) ProtoMessage() {}

func (x *KeyPoint) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPoint.ProtoReflect.Descriptor instead.
func (*KeyPoint) Descriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{2}
}

func (x *KeyPoint) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KeyPoint) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *KeyPoint) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *KeyPoint) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *KeyPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyPoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KeyPoint) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *KeyPoint) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type RequiredTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64     `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TourId        int64     `protobuf:"varint,2,opt,name=TourId,proto3" json:"TourId,omitempty"`
	TransportType Transport `protobuf:"varint,3,opt,name=TransportType,proto3,enum=tours.Transport" json:"TransportType,omitempty"`
	Minutes       int64     `protobuf:"varint,4,opt,name=Minutes,proto3" json:"Minutes,omitempty"`
}

func (x *RequiredTime) Reset() {
	*x = RequiredTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequiredTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequiredTime) ProtoMessage() {}

func (x *RequiredTime) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequiredTime.ProtoReflect.Descriptor instead.
func (*RequiredTime) Descriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{3}
}

func (x *RequiredTime) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequiredTime) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *RequiredTime) GetTransportType() Transport {
	if x != nil {
		return x.TransportType
	}
	return Transport_Walk
}

func (x *RequiredTime) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

type UserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UserIdRequest) Reset() {
	*x = UserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdRequest) ProtoMessage() {}

func (x *UserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdRequest.ProtoReflect.Descriptor instead.
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_service_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_tours_tours_service_proto protoreflect.FileDescriptor

var file_tours_tours_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x6f, 0x75,
	0x72, 0x73, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a,
	0x0a, 0x0d, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xf7, 0x03, 0x0a, 0x0c, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x79, 0x4f, 0x77, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x4d, 0x79, 0x4f, 0x77, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x73, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x4b, 0x65, 0x79, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x61, 0x67, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x88, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x6f,
	0x75, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a,
	0x2d, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x08, 0x0a, 0x04,
	0x57, 0x61, 0x6c, 0x6b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x72, 0x69, 0x76, 0x65, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x34,
	0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x10, 0x02, 0x32, 0xdc, 0x02, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x13,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x07,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x13, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x13, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x73, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tours_tours_service_proto_rawDescOnce sync.Once
	file_tours_tours_service_proto_rawDescData = file_tours_tours_service_proto_rawDesc
)

func file_tours_tours_service_proto_rawDescGZIP() []byte {
	file_tours_tours_service_proto_rawDescOnce.Do(func() {
		file_tours_tours_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tours_tours_service_proto_rawDescData)
	})
	return file_tours_tours_service_proto_rawDescData
}

var file_tours_tours_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tours_tours_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tours_tours_service_proto_goTypes = []interface{}{
	(Transport)(0),                // 0: tours.Transport
	(TourStatus)(0),               // 1: tours.TourStatus
	(*ToursResponse)(nil),         // 2: tours.ToursResponse
	(*TourResponse)(nil),          // 3: tours.TourResponse
	(*KeyPoint)(nil),              // 4: tours.KeyPoint
	(*RequiredTime)(nil),          // 5: tours.RequiredTime
	(*UserIdRequest)(nil),         // 6: tours.UserIdRequest
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_tours_tours_service_proto_depIdxs = []int32{
	3,  // 0: tours.ToursResponse.Tours:type_name -> tours.TourResponse
	1,  // 1: tours.TourResponse.Status:type_name -> tours.TourStatus
	7,  // 2: tours.TourResponse.PublishTime:type_name -> google.protobuf.Timestamp
	7,  // 3: tours.TourResponse.ArchiveTime:type_name -> google.protobuf.Timestamp
	4,  // 4: tours.TourResponse.KeyPoints:type_name -> tours.KeyPoint
	5,  // 5: tours.TourResponse.RequiredTimes:type_name -> tours.RequiredTime
	0,  // 6: tours.RequiredTime.TransportType:type_name -> tours.Transport
	6,  // 7: tours.ToursService.Get:input_type -> tours.UserIdRequest
	6,  // 8: tours.ToursService.GetAllByAuthor:input_type -> tours.UserIdRequest
	3,  // 9: tours.ToursService.Create:input_type -> tours.TourResponse
	3,  // 10: tours.ToursService.Update:input_type -> tours.TourResponse
	3,  // 11: tours.ToursService.Publish:input_type -> tours.TourResponse
	3,  // 12: tours.ToursService.Archive:input_type -> tours.TourResponse
	3,  // 13: tours.ToursService.Get:output_type -> tours.TourResponse
	2,  // 14: tours.ToursService.GetAllByAuthor:output_type -> tours.ToursResponse
	3,  // 15: tours.ToursService.Create:output_type -> tours.TourResponse
	3,  // 16: tours.ToursService.Update:output_type -> tours.TourResponse
	3,  // 17: tours.ToursService.Publish:output_type -> tours.TourResponse
	3,  // 18: tours.ToursService.Archive:output_type -> tours.TourResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_tours_tours_service_proto_init() }
func file_tours_tours_service_proto_init() {
	if File_tours_tours_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tours_tours_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequiredTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tours_tours_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tours_tours_service_proto_goTypes,
		DependencyIndexes: file_tours_tours_service_proto_depIdxs,
		EnumInfos:         file_tours_tours_service_proto_enumTypes,
		MessageInfos:      file_tours_tours_service_proto_msgTypes,
	}.Build()
	File_tours_tours_service_proto = out.File
	file_tours_tours_service_proto_rawDesc = nil
	file_tours_tours_service_proto_goTypes = nil
	file_tours_tours_service_proto_depIdxs = nil
}
